-- We'll be reusing a couple of methods from this
--GUI.req("Classes/Class - Button.lua")()
-- We'll keep the loaded images here so we don't keep loading existing files
local images = {}

-- Loads the specified image from script_path/images/[image].png
-- If successful, returns a buffer number for retrieving it
local function loadImage(image_src)
  -- If we've already got this file...
  if images[image_src] then return images[image_src] end

  -- Have the GUI assign a buffer for our image to live in
  local buffer = GUI.GetBuffer()
  -- Attempt to load the given image from our ./images
  if GUI.script_path == nil then GUI.script_path ="" end 
  local ret = 0 -- gfx.loadimg(buffer, GUI.script_path.."/images/"..image_src..".png")
  local p = {{0,0,0,239,368,0,1,1,93,1,1,1,229,1,1,1,106,2,1,1,216,2,1,1,333,3,1,1,142,4,1,1,398,5,1,1,143,6,1,1,325,8,1,1,388,8,1,1,156,11,1,1,235,12,1,1,112,13,1,1,138,13,1,1,155,13,1,1,86,14,1,1,236,14,1,1,154,15,1,1,209,15,1,1,85,16,1,1,208,17,1,1,161,18,1,1,93,19,1,1,229,19,1,1,151,20,1,1,143,22,1,1,250,23,1,1,287,23,1,1,324,23,1,1,388,23,1,1,118,24,1,1,144,24,1,1,242,25,1,1,89,26,1,1,119,26,1,1,251,26,1,1,286,26,1,1,156,27,1,1,212,27,1,1,88,28,1,1,155,29,1,1,211,29,1,1,395,29,1,1,87,30,1,1,201,30,1,1,256,30,1,1,281,30,1,1,364,30,1,1},{0,0,0,80,328,0,1,1,395,1,1,1,335,5,1,1,399,6,1,1,110,8,1,1,211,10,1,1,389,10,1,1,326,19,1,1,389,21,1,1,386,23,1,1,145,27,1,1,286,27,1,1,110,28,1,1,87,31,1,1,122,31,1,1,326,31,1,1},{0,0,0,255,369,0,20,1,0,1,36,7,41,1,32,6,94,1,12,1,127,1,14,2,162,1,14,1,217,1,12,1,250,1,9,21,279,1,9,21,295,1,35,1,343,1,8,30,364,1,30,1,93,2,13,1,161,2,15,2,217,2,13,1,295,2,37,1,362,2,34,1,92,3,15,1,127,3,15,2,216,3,15,1,295,3,38,1,361,3,36,1,92,4,16,1,160,4,16,2,215,4,16,1,295,4,39,1,360,4,38,1,91,5,17,1,127,5,16,2,215,5,17,1,295,5,40,3,359,5,39,1,91,6,18,1,159,6,17,2,214,6,18,1,359,6,40,2,41,7,8,6,90,7,9,2,100,7,9,1,127,7,17,1,214,7,9,1,224,7,9,2,14,8,8,23,101,8,9,2,127,8,18,1,158,8,18,1,213,8,9,2,295,8,9,16,326,8,10,2,358,8,11,1,389,8,10,1,89,9,9,2,127,9,8,22,136,9,9,1,158,9,8,1,168,9,8,22,225,9,9,2,358,9,10,2,390,9,9,1,102,10,9,2,137,10,9,2,157,10,9,1,212,10,9,2,327,10,9,12,390,10,10,2,88,11,9,2,157,11,8,1,226,11,9,2,358,11,9,10,103,12,9,2,138,12,9,1,156,12,9,1,211,12,9,2,391,12,9,8,41,13,31,6,87,13,9,2,139,13,8,1,156,13,8,1,227,13,9,2,104,14,9,1,139,14,9,1,155,14,9,1,210,14,9,2,86,15,9,2,104,15,10,1,140,15,8,1,155,15,8,1,228,15,9,1,105,16,9,1,140,16,9,1,154,16,9,1,209,16,9,2,228,16,10,1,85,17,9,1,105,17,10,1,141,17,8,1,153,17,9,1,229,17,9,1,84,18,10,1,106,18,9,1,141,18,9,1,153,18,8,1,208,18,9,1,229,18,10,1,41,19,8,5,84,19,9,1,106,19,10,1,142,19,8,1,152,19,9,1,207,19,10,1,230,19,9,1,83,20,33,1,142,20,9,1,152,20,8,1,207,20,33,1,390,20,10,2,83,21,34,1,143,21,17,1,206,21,34,1,358,21,10,2,82,22,35,1,144,22,15,2,206,22,35,1,250,22,10,1,278,22,10,1,326,22,10,1,390,22,9,1,82,23,36,1,205,23,36,1,251,23,10,1,277,23,10,1,325,23,11,1,358,23,11,1,389,23,10,1,41,24,33,7,81,24,37,1,145,24,13,2,205,24,37,1,251,24,36,2,295,24,40,3,359,24,40,2,81,25,38,1,204,25,38,1,80,26,9,2,110,26,9,1,146,26,11,1,204,26,9,1,234,26,9,1,252,26,34,2,359,26,39,1,111,27,9,1,146,27,10,1,203,27,9,2,234,27,10,1,295,27,39,1,360,27,38,1,79,28,9,2,111,28,10,1,147,28,9,1,235,28,9,1,253,28,32,1,295,28,38,1,361,28,36,1,112,29,9,1,147,29,8,1,202,29,9,2,235,29,10,1,254,29,30,1,295,29,37,1,362,29,33,1,78,30,9,1,112,30,10,1,148,30,7,1,236,30,9,1,257,30,24,1,295,30,34,1,365,30,28,1},{0,0,0,223,389,0,1,1,363,1,1,1,141,2,1,1,360,3,1,1,49,7,1,1,99,7,1,1,158,7,1,1,223,7,1,1,335,7,1,1,110,9,1,1,157,9,1,1,166,9,1,1,389,9,1,1,399,9,1,1,234,10,1,1,111,11,1,1,165,11,1,1,211,11,1,1,87,12,1,1,210,13,1,1,139,15,1,1,149,17,1,1,150,19,1,1,160,20,1,1,240,21,1,1,326,21,1,1,117,22,1,1,241,23,1,1,369,23,1,1,145,26,1,1,203,26,1,1,233,26,1,1,398,26,1,1,79,27,1,1,110,27,1,1,202,28,1,1,78,29,1,1,329,30,1,1,393,30,1,1},{0,0,0,159,391,0,1,1,161,1,1,1,396,2,1,1,107,3,1,1,215,3,1,1,91,4,1,1,231,4,1,1,214,5,1,1,335,6,1,1,144,7,1,1,145,9,1,1,136,10,1,1,326,10,1,1,102,12,1,1,226,13,1,1,103,14,1,1,163,15,1,1,227,15,1,1,237,15,1,1,104,16,1,1,114,16,1,1,153,16,1,1,94,17,1,1,228,17,1,1,105,18,1,1,152,18,1,1,207,18,1,1,217,18,1,1,83,19,1,1,206,20,1,1,82,21,1,1,142,21,1,1,325,22,1,1,368,22,1,1,157,26,1,1,120,27,1,1,244,28,1,1,252,28,1,1,285,28,1,1,121,29,1,1,255,30,1,1,282,30,1,1,363,30,1,1,389,31,1,1},}  
  for rgb = 1, #p do
       gfx.setpixel(p[rgb][1],p[rgb][2],p[rgb][3])
    for w=5, #p[rgb], 4 do
       gfx.rect(p[rgb][w],p[rgb][w+1],p[rgb][w+2],p[rgb][w+3],20)
    end  
  end 

  -- If we're good, store the buffer number and return it
  if ret > -1 then
    --images[image_src] = buffer
    return buffer
  -- If not, release the buffer
  else
    GUI.FreeBuffer(buffer)
  end
end

-- Create a new element class
local Image = GUI.Element:new()
GUI.Image = Image
Image.__index = Image

-- Required properties: z, w, h, image, func, params
-- w and h must be the size of one "frame" of the image
function Image:new(name, props)
  local new_image = props

  new_image.name = name
  new_image.type = "Image"

  if not new_image.src then error("Image: Missing 'image' property") end

  new_image.state = 0

  GUI.redraw_z[new_image.z] = true

  return setmetatable(new_image, self)
end

-- Make sure we have the image specified for this button
function Image:init()
  self.imageBuffer = loadImage(self.src)
  if not self.imageBuffer then 
    --error("IButton: The specified image was not found") 
  end
end

-- Draw from our buffer to the current layer
-- This setup expects three button states, laid out left to right: Normal, Hover, Down
function Image:draw()
  gfx.mode = 0
    gfx.blit(self.imageBuffer, 1, 0, 0, 0, self.w, self.h, self.x, self.y, self.w, self.h)
  --gfx.blit(self.imageBuffer, 1, 0, self.state * self.w, 0, self.w, self.h, self.x, self.y, self.w, self.h)
end

-- Check to see if the mouse has left the button and update accordingly
function Image:onupdate()
end
